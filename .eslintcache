[{"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/index.tsx":"1","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/App.tsx":"2","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/App.styles.ts":"3","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Item/Item.tsx":"4","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Item/Item.styles.ts":"5","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Cart/Cart.tsx":"6","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Cart/Cart.styles.ts":"7","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/CartItem/CartItem.tsx":"8","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/CartItem/CartItem.styles.tsx":"9"},{"size":318,"mtime":1612529023886,"results":"10","hashOfConfig":"11"},{"size":2809,"mtime":1612706092986,"results":"12","hashOfConfig":"11"},{"size":265,"mtime":1612529516772,"results":"13","hashOfConfig":"11"},{"size":584,"mtime":1612529019181,"results":"14","hashOfConfig":"11"},{"size":481,"mtime":1612529016861,"results":"15","hashOfConfig":"11"},{"size":723,"mtime":1612531964254,"results":"16","hashOfConfig":"11"},{"size":159,"mtime":1612530381012,"results":"17","hashOfConfig":"11"},{"size":1094,"mtime":1612705506904,"results":"18","hashOfConfig":"11"},{"size":433,"mtime":1612705578728,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1p5lz29",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/index.tsx",[],["40","41"],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/App.tsx",["42"],"import { useState } from 'react';\nimport { useQuery } from 'react-query';\n//components:\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\n//styles:\nimport { Wrapper, StyledButton } from './App.styles';\nimport CartItem from './CartItem/CartItem';\n//types:\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/App.styles.ts",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Item/Item.tsx",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Item/Item.styles.ts",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Cart/Cart.tsx",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/Cart/Cart.styles.ts",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/CartItem/CartItem.tsx",[],"/media/aleksandra/Nowy/programowanie/react-shopping-cart/src/CartItem/CartItem.styles.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":13,"column":8,"nodeType":"49","messageId":"50","endLine":13,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'CartItem' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]